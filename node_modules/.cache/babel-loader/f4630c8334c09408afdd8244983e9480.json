{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kamakshi/Desktop/javascript-client/src/components/Math/Math.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Text = props => {\n  const {\n    first,\n    second,\n    operator,\n    children\n  } = props;\n  let {\n    result\n  } = props;\n\n  switch (operator) {\n    case '+':\n      result = first + second;\n      break;\n\n    case '-':\n      result = first - second;\n      break;\n\n    case '/':\n      result = first / second;\n      break;\n\n    case '*':\n      result = first * second;\n      break;\n\n    default:\n      break;\n  }\n\n  if (children) {\n    return children(first, second, result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [' ', first, ' ', operator, ' ', second, ' ', \"=\", ' ', result, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = Text;\nText.propTypes = {\n  first: PropTypes.number.isRequired,\n  second: PropTypes.number.isRequired,\n  operator: PropTypes.string.isRequired,\n  result: PropTypes.number.isRequired,\n  children: PropTypes.func\n};\nText.defaultProps = {\n  children: undefined\n};\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/home/kamakshi/Desktop/javascript-client/src/components/Math/Math.jsx"],"names":["React","PropTypes","Text","props","first","second","operator","children","result","propTypes","number","isRequired","string","func","defaultProps","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AACJC,IAAAA,KADI;AACGC,IAAAA,MADH;AACWC,IAAAA,QADX;AACqBC,IAAAA;AADrB,MAEFJ,KAFJ;AAGA,MAAI;AAAEK,IAAAA;AAAF,MAAaL,KAAjB;;AACA,UAAQG,QAAR;AACA,SAAK,GAAL;AAAUE,MAAAA,MAAM,GAAGJ,KAAK,GAAGC,MAAjB;AACR;;AACF,SAAK,GAAL;AAAUG,MAAAA,MAAM,GAAGJ,KAAK,GAAGC,MAAjB;AACR;;AACF,SAAK,GAAL;AAAUG,MAAAA,MAAM,GAAGJ,KAAK,GAAGC,MAAjB;AACR;;AACF,SAAK,GAAL;AAAUG,MAAAA,MAAM,GAAGJ,KAAK,GAAGC,MAAjB;AACR;;AACF;AAAS;AATT;;AAUE,MAAIE,QAAJ,EAAc;AACd,WAAOA,QAAQ,CAACH,KAAD,EAAQC,MAAR,EAAgBG,MAAhB,CAAf;AACD;;AACD,sBACE;AAAA,2BACE;AAAA,iBACG,GADH,EAEGJ,KAFH,EAGG,GAHH,EAIGE,QAJH,EAKG,GALH,EAMGD,MANH,EAOG,GAPH,OASG,GATH,EAUGG,MAVH,EAWG,GAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD,CAnCD;;KAAMN,I;AAoCNA,IAAI,CAACO,SAAL,GAAiB;AACfL,EAAAA,KAAK,EAAEH,SAAS,CAACS,MAAV,CAAiBC,UADT;AAEfN,EAAAA,MAAM,EAAEJ,SAAS,CAACS,MAAV,CAAiBC,UAFV;AAGfL,EAAAA,QAAQ,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAHZ;AAIfH,EAAAA,MAAM,EAAEP,SAAS,CAACS,MAAV,CAAiBC,UAJV;AAKfJ,EAAAA,QAAQ,EAAEN,SAAS,CAACY;AALL,CAAjB;AAOAX,IAAI,CAACY,YAAL,GAAoB;AAClBP,EAAAA,QAAQ,EAAEQ;AADQ,CAApB;AAGA,eAAeb,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Text = (props) => {\n  const {\n    first, second, operator, children,\n  } = props;\n  let { result } = props;\n  switch (operator) {\n  case '+': result = first + second;\n    break;\n  case '-': result = first - second;\n    break;\n  case '/': result = first / second;\n    break;\n  case '*': result = first * second;\n    break;\n  default: break;\n  } if (children) {\n    return children(first, second, result);\n  }\n  return (\n    <>\n      <p>\n        {' '}\n        {first}\n        {' '}\n        {operator}\n        {' '}\n        {second}\n        {' '}\n        =\n        {' '}\n        {result}\n        {' '}\n      </p>\n    </>\n  );\n};\nText.propTypes = {\n  first: PropTypes.number.isRequired,\n  second: PropTypes.number.isRequired,\n  operator: PropTypes.string.isRequired,\n  result: PropTypes.number.isRequired,\n  children: PropTypes.func,\n};\nText.defaultProps = {\n  children: undefined,\n};\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}