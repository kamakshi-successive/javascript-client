{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kamakshi/Desktop/javascript-client/src/components/Slider/Slider.jsx\";\n\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { PUBLIC_IMAGE_FOLDER, DEFAULT_BANNER_IMAGE } from '../../config/constant';\nimport { getRandomNumber, getNextRoundRobin } from '../../libs/utils/math';\nimport Img from './style';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      random,\n      duration,\n      banners\n    } = this.props;\n    this.id = setInterval(() => {\n      const {\n        current\n      } = this.state;\n\n      if (banners.length) {\n        const newBanner = random ? getRandomNumber(banners.length) : getNextRoundRobin(banners.length, current);\n        this.setState({\n          current: newBanner\n        });\n      }\n    }, duration);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.id);\n  }\n\n  render() {\n    const {\n      altText,\n      height,\n      banners\n    } = this.props;\n    const {\n      current\n    } = this.state;\n    const path = current ? PUBLIC_IMAGE_FOLDER + banners[current] : DEFAULT_BANNER_IMAGE;\n    return /*#__PURE__*/_jsxDEV(Img, {\n      src: path,\n      alt: altText,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSlider.propTypes = {\n  altText: PropTypes.string,\n  banners: PropTypes.arrayOf(PropTypes.string),\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  random: PropTypes.bool\n};\nSlider.defaultProps = {\n  altText: 'DefaultBanner',\n  banners: [],\n  duration: 2000,\n  height: 200,\n  random: false\n};\nexport default Slider;","map":{"version":3,"sources":["/home/kamakshi/Desktop/javascript-client/src/components/Slider/Slider.jsx"],"names":["React","PropTypes","PUBLIC_IMAGE_FOLDER","DEFAULT_BANNER_IMAGE","getRandomNumber","getNextRoundRobin","Img","Slider","Component","constructor","props","state","current","componentDidMount","random","duration","banners","id","setInterval","length","newBanner","setState","componentWillUnmount","clearInterval","render","altText","height","path","propTypes","string","arrayOf","number","bool","defaultProps"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,mBAAT,EAA8BC,oBAA9B,QAA0D,uBAA1D;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,uBAAnD;AACA,OAAOC,GAAP,MAAgB,SAAhB;;AAEA,MAAMC,MAAN,SAAqBP,KAAK,CAACQ,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAAgC,KAAKN,KAA3C;AACA,SAAKO,EAAL,GAAUC,WAAW,CAAC,MAAM;AAC1B,YAAM;AAAEN,QAAAA;AAAF,UAAc,KAAKD,KAAzB;;AACA,UAAIK,OAAO,CAACG,MAAZ,EAAoB;AAClB,cAAMC,SAAS,GAAGN,MAAM,GAAGV,eAAe,CAACY,OAAO,CAACG,MAAT,CAAlB,GAAqCd,iBAAiB,CAACW,OAAO,CAACG,MAAT,EAAiBP,OAAjB,CAA9E;AACA,aAAKS,QAAL,CAAc;AAAET,UAAAA,OAAO,EAAEQ;AAAX,SAAd;AACD;AACF,KANoB,EAMlBL,QANkB,CAArB;AAOD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKN,EAAN,CAAb;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,MAAX;AAAmBV,MAAAA;AAAnB,QAA+B,KAAKN,KAA1C;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,UAAMgB,IAAI,GAAGf,OAAO,GAAGV,mBAAmB,GAAGc,OAAO,CAACJ,OAAD,CAAhC,GAA4CT,oBAAhE;AACA,wBACE,QAAC,GAAD;AAAK,MAAA,GAAG,EAAEwB,IAAV;AAAgB,MAAA,GAAG,EAAEF,OAArB;AAA8B,MAAA,MAAM,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA9BkC;;AAiCrCnB,MAAM,CAACqB,SAAP,GAAmB;AACjBH,EAAAA,OAAO,EAAExB,SAAS,CAAC4B,MADF;AAEjBb,EAAAA,OAAO,EAAEf,SAAS,CAAC6B,OAAV,CAAkB7B,SAAS,CAAC4B,MAA5B,CAFQ;AAGjBd,EAAAA,QAAQ,EAAEd,SAAS,CAAC8B,MAHH;AAIjBL,EAAAA,MAAM,EAAEzB,SAAS,CAAC8B,MAJD;AAKjBjB,EAAAA,MAAM,EAAEb,SAAS,CAAC+B;AALD,CAAnB;AAQAzB,MAAM,CAAC0B,YAAP,GAAsB;AACpBR,EAAAA,OAAO,EAAE,eADW;AAEpBT,EAAAA,OAAO,EAAE,EAFW;AAGpBD,EAAAA,QAAQ,EAAE,IAHU;AAIpBW,EAAAA,MAAM,EAAE,GAJY;AAKpBZ,EAAAA,MAAM,EAAE;AALY,CAAtB;AAQA,eAAeP,MAAf","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { PUBLIC_IMAGE_FOLDER, DEFAULT_BANNER_IMAGE } from '../../config/constant';\nimport { getRandomNumber, getNextRoundRobin } from '../../libs/utils/math';\nimport Img from './style';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: null,\n    };\n  }\n\n  componentDidMount() {\n    const { random, duration, banners } = this.props;\n    this.id = setInterval(() => {\n      const { current } = this.state;\n      if (banners.length) {\n        const newBanner = random ? getRandomNumber(banners.length) : getNextRoundRobin(banners.length, current);\n        this.setState({ current: newBanner });\n      }\n    }, duration);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.id);\n  }\n\n  render() {\n    const { altText, height, banners } = this.props;\n    const { current } = this.state;\n    const path = current ? PUBLIC_IMAGE_FOLDER + banners[current] : DEFAULT_BANNER_IMAGE;\n    return (\n      <Img src={path} alt={altText} height={height} />\n    );\n  }\n}\n\nSlider.propTypes = {\n  altText: PropTypes.string,\n  banners: PropTypes.arrayOf(PropTypes.string),\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  random: PropTypes.bool,\n};\n\nSlider.defaultProps = {\n  altText: 'DefaultBanner',\n  banners: [],\n  duration: 2000,\n  height: 200,\n  random: false,\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"module"}