{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kamakshi/Desktop/javascript-client/src/pages/Trainee/components/AddDialog./AddDialog.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText } from '@material-ui/core';\nimport { Email, VisibilityOff, Person } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport schema from './DialogSchema';\nimport Handler from './Handler';\n\nconst passwordStyle = () => ({\n  passfield: {\n    display: 'flex',\n    flexdirection: 'row'\n  },\n  pass: {\n    flex: 1\n  }\n});\n\nconst config = [{\n  key: 'name',\n  label: 'Name',\n  icon: Person\n}, {\n  key: 'email',\n  label: 'Email',\n  icon: Email\n}, {\n  key: 'password',\n  label: 'Password',\n  icon: VisibilityOff\n}, {\n  key: 'confirmPassword',\n  label: 'Confirm Password',\n  icon: VisibilityOff\n}];\n\nclass AddDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = key => ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.hasErrors = () => {\n      try {\n        schema.validateSync(this.state);\n      } catch (err) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.getError = field => {\n      const {\n        touched\n      } = this.state;\n\n      if (touched[field] && this.hasErrors()) {\n        try {\n          schema.validateSyncAt(field, this.state);\n          return '';\n        } catch (err) {\n          return err.message;\n        }\n      }\n    };\n\n    this.isTouched = field => {\n      const {\n        touched\n      } = this.state;\n      this.setState({\n        touched: { ...touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.passwordType = key => {\n      if (key === 'password' || key === 'confirmPassword') {\n        return 'password';\n      }\n\n      return '';\n    };\n\n    this.state = {\n      Name: '',\n      Email: '',\n      Password: '',\n      ConfirmPassword: '',\n      touched: {\n        name: false,\n        email: false,\n        password: false,\n        confirmPassword: false\n      }\n    };\n  }\n\n  render() {\n    const {\n      open,\n      onClose,\n      onSubmit,\n      classes\n    } = this.props;\n    const {\n      name,\n      email,\n      password\n    } = this.state;\n    const ans = [];\n    config.forEach(value => {\n      ans.push( /*#__PURE__*/_jsxDEV(Handler, {\n        label: value.label,\n        onChange: this.handleChange(value.key),\n        onBlur: () => this.isTouched(value.key),\n        helperText: this.getError(value.key),\n        error: !!this.getError(value.key),\n        icons: value.icon,\n        type: this.passwordType(value.key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: onClose,\n        \"aria-labelledby\": \"form-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"form-dialog-title\",\n          children: \"Add Trainee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Enter your trainee details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ans[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ans[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.passfield,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.pass,\n              children: ans[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.pass,\n              children: ans[3]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n            align: \"right\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              color: \"primary\",\n              children: \"CANCEL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              disabled: this.hasErrors(),\n              onClick: () => onSubmit({\n                name,\n                email,\n                password\n              }),\n              children: \"SUBMIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default withStyles(passwordStyle)(AddDialog);\nAddDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired\n};","map":{"version":3,"sources":["/home/kamakshi/Desktop/javascript-client/src/pages/Trainee/components/AddDialog./AddDialog.jsx"],"names":["React","PropTypes","Button","Dialog","DialogTitle","DialogContent","DialogContentText","Email","VisibilityOff","Person","withStyles","schema","Handler","passwordStyle","passfield","display","flexdirection","pass","flex","config","key","label","icon","AddDialog","Component","constructor","props","handleChange","target","value","setState","hasErrors","validateSync","state","err","getError","field","touched","validateSyncAt","message","isTouched","passwordType","Name","Password","ConfirmPassword","name","email","password","confirmPassword","render","open","onClose","onSubmit","classes","ans","forEach","push","propTypes","bool","isRequired","func","objectOf","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Dialog, DialogTitle, DialogContent, DialogContentText,\n} from '@material-ui/core';\nimport { Email, VisibilityOff, Person } from '@material-ui/icons';\nimport { withStyles } from '@material-ui/core/styles';\nimport schema from './DialogSchema';\nimport Handler from './Handler';\n\nconst passwordStyle = () => ({\n  passfield: {\n    display: 'flex',\n    flexdirection: 'row',\n  },\n  pass: {\n    flex: 1,\n  },\n});\nconst config = [{\n  key: 'name',\n  label: 'Name',\n  icon: Person,\n},\n{\n  key: 'email',\n  label: 'Email',\n  icon: Email,\n},\n{\n  key: 'password',\n  label: 'Password',\n  icon: VisibilityOff,\n},\n{\n  key: 'confirmPassword',\n  label: 'Confirm Password',\n  icon: VisibilityOff,\n},\n];\n\nclass AddDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Name: '',\n      Email: '',\n      Password: '',\n      ConfirmPassword: '',\n      touched: {\n        name: false,\n        email: false,\n        password: false,\n        confirmPassword: false,\n      },\n    };\n  }\n\n  handleChange = (key) => ({ target: { value } }) => {\n    this.setState({ [key]: value });\n  }\n\n  hasErrors = () => {\n    try {\n      schema.validateSync(this.state);\n    } catch (err) {\n      return true;\n    }\n    return false;\n  }\n\n  // eslint-disable-next-line consistent-return\n  getError = (field) => {\n    const { touched } = this.state;\n    if (touched[field] && this.hasErrors()) {\n      try {\n        schema.validateSyncAt(field, this.state);\n        return '';\n      } catch (err) {\n        return err.message;\n      }\n    }\n  };\n\n  isTouched = (field) => {\n    const { touched } = this.state;\n    this.setState({\n      touched: {\n        ...touched,\n        [field]: true,\n      },\n    });\n  }\n\n  passwordType = (key) => {\n    if (key === 'password' || key === 'confirmPassword') {\n      return 'password';\n    }\n    return '';\n  }\n\n  render() {\n    const {\n      open, onClose, onSubmit, classes,\n    } = this.props;\n    const { name, email, password } = this.state;\n    const ans = [];\n    config.forEach((value) => {\n      ans.push(<Handler\n        label={value.label}\n        onChange={this.handleChange(value.key)}\n        onBlur={() => this.isTouched(value.key)}\n        helperText={this.getError(value.key)}\n        error={!!this.getError(value.key)}\n        icons={value.icon}\n        type={this.passwordType(value.key)}\n      />);\n    });\n\n    return (\n      <>\n        <Dialog open={open} onClose={onClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">Add Trainee</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Enter your trainee details\n            </DialogContentText>\n            <div>\n              {ans[0]}\n            </div>\n            &nbsp;\n            <div>\n              {ans[1]}\n            </div>\n            &nbsp;\n            <div className={classes.passfield}>\n              <div className={classes.pass}>\n                {ans[2]}\n              </div>\n              &nbsp;\n              &nbsp;\n              <div className={classes.pass}>\n                {ans[3]}\n              </div>\n            </div>\n        &nbsp;\n            <div align=\"right\">\n              <Button onClick={onClose} color=\"primary\">CANCEL</Button>\n              <Button variant=\"contained\" color=\"primary\" disabled={this.hasErrors()} onClick={() => onSubmit({ name, email, password })}>SUBMIT</Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </>\n    );\n  }\n}\nexport default withStyles(passwordStyle)(AddDialog);\nAddDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}