{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kamakshi/Desktop/javascript-client/src/components/TextField/TextField.jsx\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Error } from './style';\n\nconst RadioField = props => {\n  // console.log('inside radio group', props);\n  const {\n    options,\n    onChange,\n    error,\n    heading,\n    onBlur\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), options && options.length && options.map(({\n      value,\n      label\n    }) => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        name: \"game\",\n        value: value,\n        onChange: event => onChange(event),\n        onBlur: onBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), label, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, label, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Error, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = RadioField;\nRadioField.propTypes = {\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  heading: PropTypes.string.isRequired,\n  onBlur: PropTypes.func.isRequired\n};\nRadioField.defaultProps = {\n  error: ''\n};\nexport default RadioField;\n\nvar _c;\n\n$RefreshReg$(_c, \"RadioField\");","map":{"version":3,"sources":["/home/kamakshi/Desktop/javascript-client/src/components/TextField/TextField.jsx"],"names":["React","Fragment","PropTypes","Error","RadioField","props","options","onChange","error","heading","onBlur","length","map","value","label","event","propTypes","string","func","isRequired","arrayOf","object","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA,QAAM;AACJC,IAAAA,OADI;AACKC,IAAAA,QADL;AACeC,IAAAA,KADf;AACsBC,IAAAA,OADtB;AAC+BC,IAAAA;AAD/B,MAEFL,KAFJ;AAGA,sBACE;AAAA,4BACE;AAAA,6BAAG;AAAA,kBAAII;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YADF,EAGIH,OAAO,IAAIA,OAAO,CAACK,MAAnB,IAA6BL,OAAO,CAACM,GAAR,CAAY,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,kBACvC,QAAC,QAAD;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,KAAK,EAAED,KAAvC;AAA8C,QAAA,QAAQ,EAAGE,KAAD,IAAWR,QAAQ,CAACQ,KAAD,CAA3E;AAAoF,QAAA,MAAM,EAAEL;AAA5F;AAAA;AAAA;AAAA;AAAA,cADF,EAEGI,KAFH,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,OAAeA,KAAf;AAAA;AAAA;AAAA;AAAA,YAD2B,CAHjC,eAWE,QAAC,KAAD;AAAA,gBACGN;AADH;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAiBD,CAtBD;;KAAMJ,U;AAuBNA,UAAU,CAACY,SAAX,GAAuB;AACrBR,EAAAA,KAAK,EAAEN,SAAS,CAACe,MADI;AAErBV,EAAAA,QAAQ,EAAEL,SAAS,CAACgB,IAAV,CAAeC,UAFJ;AAGrBb,EAAAA,OAAO,EAAEJ,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,EAAoCF,UAHxB;AAIrBV,EAAAA,OAAO,EAAEP,SAAS,CAACe,MAAV,CAAiBE,UAJL;AAKrBT,EAAAA,MAAM,EAAER,SAAS,CAACgB,IAAV,CAAeC;AALF,CAAvB;AAOAf,UAAU,CAACkB,YAAX,GAA0B;AACxBd,EAAAA,KAAK,EAAE;AADiB,CAA1B;AAGA,eAAeJ,UAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Error } from './style';\n\nconst RadioField = (props) => {\n  // console.log('inside radio group', props);\n  const {\n    options, onChange, error, heading, onBlur,\n  } = props;\n  return (\n    <>\n      <p><b>{heading}</b></p>\n      {\n        options && options.length && options.map(({ value, label }) => (\n          <Fragment key={label}>\n            <input type=\"radio\" name=\"game\" value={value} onChange={(event) => onChange(event)} onBlur={onBlur} />\n            {label}\n            <br />\n          </Fragment>\n        ))\n      }\n      <Error>\n        {error}\n      </Error>\n    </>\n  );\n};\nRadioField.propTypes = {\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  heading: PropTypes.string.isRequired,\n  onBlur: PropTypes.func.isRequired,\n};\nRadioField.defaultProps = {\n  error: '',\n};\nexport default RadioField;\n"]},"metadata":{},"sourceType":"module"}