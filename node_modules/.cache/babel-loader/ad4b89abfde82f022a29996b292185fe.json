{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kamakshi/Desktop/javascript-client/src/components/SelectField/SelectField.jsx\";\n\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from './style';\n\nfunction SelectField(props) {\n  const {\n    error,\n    onChange,\n    options,\n    defaultText,\n    onBlur\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      onChange: onChange,\n      error: error,\n      onBlur: onBlur,\n      children: [defaultText && /*#__PURE__*/_jsxDEV(\"option\", {\n        children: defaultText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 26\n      }, this), options && options.length && options.map(({\n        value,\n        label\n      }) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: value,\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 54\n      }, this)), /*#__PURE__*/_jsxDEV(Error, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = SelectField;\nSelectField.propTypes = {\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object),\n  defaultText: PropTypes.string,\n  onBlur: PropTypes.string.isRequired\n};\nSelectField.defaultProps = {\n  error: '',\n  options: [],\n  defaultText: 'Select'\n};\nexport default SelectField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectField\");","map":{"version":3,"sources":["/home/kamakshi/Desktop/javascript-client/src/components/SelectField/SelectField.jsx"],"names":["React","PropTypes","Select","SelectField","props","error","onChange","options","defaultText","onBlur","length","map","value","label","propTypes","string","func","isRequired","arrayOf","object","defaultProps"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,SAAvB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AACJC,IAAAA,KADI;AACGC,IAAAA,QADH;AACaC,IAAAA,OADb;AACsBC,IAAAA,WADtB;AACmCC,IAAAA;AADnC,MAEFL,KAFJ;AAGA,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEE,QAAlB;AAA4B,MAAA,KAAK,EAAED,KAAnC;AAA0C,MAAA,MAAM,EAAEI,MAAlD;AAAA,iBACID,WAAW,iBAAI;AAAA,kBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,cADnB,EAGID,OAAO,IAAIA,OAAO,CAACG,MAAnB,IACSH,OAAO,CAACI,GAAR,CAAY,CAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,kBAAsB;AAAoB,QAAA,KAAK,EAAED,KAA3B;AAAA,kBAAmCC;AAAnC,SAAaA,KAAb;AAAA;AAAA;AAAA;AAAA,cAAlC,CAJb,eAOE,QAAC,KAAD;AAAA,kBAASR;AAAT;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;KAjBQF,W;AAkBTA,WAAW,CAACW,SAAZ,GAAwB;AACtBT,EAAAA,KAAK,EAAEJ,SAAS,CAACc,MADK;AAEtBT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeC,UAFH;AAGtBV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,OAAV,CAAkBjB,SAAS,CAACkB,MAA5B,CAHa;AAItBX,EAAAA,WAAW,EAAEP,SAAS,CAACc,MAJD;AAKtBN,EAAAA,MAAM,EAAER,SAAS,CAACc,MAAV,CAAiBE;AALH,CAAxB;AAOAd,WAAW,CAACiB,YAAZ,GAA2B;AACzBf,EAAAA,KAAK,EAAE,EADkB;AAEzBE,EAAAA,OAAO,EAAE,EAFgB;AAGzBC,EAAAA,WAAW,EAAE;AAHY,CAA3B;AAKA,eAAeL,WAAf","sourcesContent":["/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from './style';\n\nfunction SelectField(props) {\n  const {\n    error, onChange, options, defaultText, onBlur,\n  } = props;\n  return (\n    <>\n      <Select onChange={onChange} error={error} onBlur={onBlur}>\n        { defaultText && <option>{defaultText}</option>}\n        {\n          options && options.length\n                && options.map(({ value, label }) => <option key={label} value={value}>{label}</option>)\n\n        }\n        <Error>{ error }</Error>\n      </Select>\n    </>\n  );\n}\nSelectField.propTypes = {\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object),\n  defaultText: PropTypes.string,\n  onBlur: PropTypes.string.isRequired,\n};\nSelectField.defaultProps = {\n  error: '',\n  options: [],\n  defaultText: 'Select',\n};\nexport default SelectField;\n"]},"metadata":{},"sourceType":"module"}