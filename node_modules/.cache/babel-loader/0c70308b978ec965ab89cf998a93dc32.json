{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kamakshi/Desktop/javascript-client/src/pages/Login/Login.jsx\";\nimport React from 'react';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { TextField, CssBaseline, Card, Typography, Avatar, CardContent, withStyles, InputAdornment, Button } from '@material-ui/core';\nimport { Email, VisibilityOff, LockOutlined } from '@material-ui/icons';\n\nconst Design = theme => ({\n  icon: {\n    background: 'red',\n    marginLeft: theme.spacing(22),\n    marginTop: theme.spacing(2)\n  },\n  main: {\n    width: 400,\n    marginTop: theme.spacing(20),\n    marginLeft: theme.spacing(58)\n  }\n});\n\n_c = Design;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.schema = yup.object().shape({\n      email: yup.string().trim().email().required('Email Address is a required field'),\n      password: yup.string().required('Password is Required').matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/, 'Must contain 8 characters, at least one uppercase letter, one lowercase letter and one number')\n    });\n\n    this.handleChange = key => ({\n      target: {\n        value\n      }\n    }) => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.hasErrors = () => {\n      try {\n        this.schema.validateSync(this.state);\n      } catch (err) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.getError = field => {\n      const {\n        touched\n      } = this.state;\n\n      if (touched[field] && this.hasErrors()) {\n        try {\n          this.schema.validateSyncAt(field, this.state);\n          return '';\n        } catch (err) {\n          return err.message;\n        }\n      }\n    };\n\n    this.isTouched = field => {\n      const {\n        touched\n      } = this.state;\n      this.setState({\n        touched: { ...touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.state = {\n      Email: '',\n      Password: '',\n      touched: {\n        email: false,\n        password: false\n      }\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.main,\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          open: true,\n          \"aria-labelledby\": \"form-dialog-title\",\n          children: [/*#__PURE__*/_jsxDEV(Avtar, {\n            className: classes.icon,\n            children: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            align: \"center\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  id: \"outlined-required\",\n                  label: \"Email Address\",\n                  defaultValue: \" \",\n                  variant: \"outlined\",\n                  helperText: this.getError('email'),\n                  error: !!this.getError('email'),\n                  oncChange: this.handleChange('email'),\n                  onBlur: () => this.isTouched('email'),\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(Email, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 25\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  type: \"password\",\n                  fullWidth: true,\n                  id: \"outlined-required\",\n                  label: \"Password\",\n                  defaultValue: \" \",\n                  variant: \"outlined\",\n                  helperText: this.getError('password'),\n                  error: !!this.getError('password'),\n                  oncChange: this.handleChange('password'),\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      children: /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 25\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  color: \"primary\",\n                  disabled: this.hasErrors(),\n                  fullWidth: true,\n                  children: \"SIGN IN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nLogin.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired\n};\nexport default withStyles(Design)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Design\");","map":{"version":3,"sources":["/home/kamakshi/Desktop/javascript-client/src/pages/Login/Login.jsx"],"names":["React","yup","PropTypes","TextField","CssBaseline","Card","Typography","Avatar","CardContent","withStyles","InputAdornment","Button","Email","VisibilityOff","LockOutlined","Design","theme","icon","background","marginLeft","spacing","marginTop","main","width","Login","Component","constructor","props","schema","object","shape","email","string","trim","required","password","matches","handleChange","key","target","value","setState","hasErrors","validateSync","state","err","getError","field","touched","validateSyncAt","message","isTouched","Password","render","classes","startAdornment","propTypes","objectOf","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,SADF,EACaC,WADb,EAC0BC,IAD1B,EACgCC,UADhC,EAC4CC,MAD5C,EAEEC,WAFF,EAEeC,UAFf,EAE2BC,cAF3B,EAE2CC,MAF3C,QAGO,mBAHP;AAIA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,YAA/B,QAAmD,oBAAnD;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;AACzBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,KADR;AAEJC,IAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,EAAd,CAFR;AAGJC,IAAAA,SAAS,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd;AAHP,GADmB;AAMzBE,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJF,IAAAA,SAAS,EAAEL,KAAK,CAACI,OAAN,CAAc,EAAd,CAFP;AAGJD,IAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,EAAd;AAHR;AANmB,CAAZ,CAAf;;KAAML,M;;AAYN,MAAMS,KAAN,SAAoBxB,KAAK,CAACyB,SAA1B,CAAoC;AASlCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SARnBC,MAQmB,GARV3B,GAAG,CAAC4B,MAAJ,GAAaC,KAAb,CAAmB;AAC1BC,MAAAA,KAAK,EAAE9B,GAAG,CAAC+B,MAAJ,GACJC,IADI,GACGF,KADH,GACWG,QADX,CACoB,mCADpB,CADmB;AAG1BC,MAAAA,QAAQ,EAAElC,GAAG,CAAC+B,MAAJ,GACPE,QADO,CACE,sBADF,EAEPE,OAFO,CAEC,6CAFD,EAEgD,+FAFhD;AAHgB,KAAnB,CAQU;;AAAA,SAYnBC,YAZmB,GAYLC,GAAD,IAAS,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA;AAAF;AAAV,KAAD,KAA2B;AAC/C,WAAKC,QAAL,CAAc;AAAE,SAACH,GAAD,GAAOE;AAAT,OAAd;AACD,KAdkB;;AAAA,SAgBnBE,SAhBmB,GAgBP,MAAM;AAChB,UAAI;AACF,aAAKd,MAAL,CAAYe,YAAZ,CAAyB,KAAKC,KAA9B;AACD,OAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD,KAvBkB;;AAAA,SA0BnBC,QA1BmB,GA0BPC,KAAD,IAAW;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKJ,KAAzB;;AACA,UAAII,OAAO,CAACD,KAAD,CAAP,IAAkB,KAAKL,SAAL,EAAtB,EAAwC;AACtC,YAAI;AACF,eAAKd,MAAL,CAAYqB,cAAZ,CAA2BF,KAA3B,EAAkC,KAAKH,KAAvC;AACA,iBAAO,EAAP;AACD,SAHD,CAGE,OAAOC,GAAP,EAAY;AACZ,iBAAOA,GAAG,CAACK,OAAX;AACD;AACF;AACF,KApCkB;;AAAA,SAsCnBC,SAtCmB,GAsCNJ,KAAD,IAAW;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKJ,KAAzB;AACA,WAAKH,QAAL,CAAc;AACZO,QAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEP,WAACD,KAAD,GAAS;AAFF;AADG,OAAd;AAMD,KA9CkB;;AAEjB,SAAKH,KAAL,GAAa;AACXhC,MAAAA,KAAK,EAAE,EADI;AAEXwC,MAAAA,QAAQ,EAAE,EAFC;AAGXJ,MAAAA,OAAO,EAAE;AACPjB,QAAAA,KAAK,EAAE,KADA;AAEPI,QAAAA,QAAQ,EAAE;AAFH;AAHE,KAAb;AAQD;;AAsCDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAK3B,KAAzB;AACA,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAE2B,OAAO,CAAChC,IAAxB;AAAA,gCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,6BAAgB,mBAA3B;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEgC,OAAO,CAACrC,IAA1B;AAAA,mCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,WAAD;AAAA,mCACE;AAAA,sCACE;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,QAAQ,MADV;AAEE,kBAAA,SAAS,MAFX;AAGE,kBAAA,EAAE,EAAC,mBAHL;AAIE,kBAAA,KAAK,EAAC,eAJR;AAKE,kBAAA,YAAY,EAAC,GALf;AAME,kBAAA,OAAO,EAAC,UANV;AAOE,kBAAA,UAAU,EAAE,KAAK6B,QAAL,CAAc,OAAd,CAPd;AAQE,kBAAA,KAAK,EAAE,CAAC,CAAC,KAAKA,QAAL,CAAc,OAAd,CARX;AASE,kBAAA,SAAS,EAAE,KAAKT,YAAL,CAAkB,OAAlB,CATb;AAUE,kBAAA,MAAM,EAAE,MAAM,KAAKc,SAAL,CAAe,OAAf,CAVhB;AAWE,kBAAA,UAAU,EAAE;AACVI,oBAAAA,cAAc,eACZ,QAAC,cAAD;AAAgB,sBAAA,QAAQ,EAAC,OAAzB;AAAA,6CACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFQ;AAXd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAsBE;AAAA;AAAA;AAAA;AAAA,sBAtBF,eAuBE;AAAA,uCACE,QAAC,SAAD;AACE,kBAAA,QAAQ,MADV;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,SAAS,MAHX;AAIE,kBAAA,EAAE,EAAC,mBAJL;AAKE,kBAAA,KAAK,EAAC,UALR;AAME,kBAAA,YAAY,EAAC,GANf;AAOE,kBAAA,OAAO,EAAC,UAPV;AAQE,kBAAA,UAAU,EAAE,KAAKT,QAAL,CAAc,UAAd,CARd;AASE,kBAAA,KAAK,EAAE,CAAC,CAAC,KAAKA,QAAL,CAAc,UAAd,CATX;AAUE,kBAAA,SAAS,EAAE,KAAKT,YAAL,CAAkB,UAAlB,CAVb;AAWE,kBAAA,UAAU,EAAE;AACVkB,oBAAAA,cAAc,eACZ,QAAC,cAAD;AAAgB,sBAAA,QAAQ,EAAC,OAAzB;AAAA,6CACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFQ;AAXd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAvBF,uBA6CE;AAAA,uCACE,QAAC,MAAD;AAAQ,kBAAA,OAAO,EAAC,WAAhB;AAA4B,kBAAA,KAAK,EAAC,SAAlC;AAA4C,kBAAA,QAAQ,EAAE,KAAKb,SAAL,EAAtD;AAAwE,kBAAA,SAAS,MAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA7CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAgED;;AA3HiC;;AA8HpClB,KAAK,CAACgC,SAAN,GAAkB;AAChBF,EAAAA,OAAO,EAAEpD,SAAS,CAACuD,QAAV,CAAmBvD,SAAS,CAAC8B,MAA7B,EAAqC0B;AAD9B,CAAlB;AAGA,eAAejD,UAAU,CAACM,MAAD,CAAV,CAAmBS,KAAnB,CAAf","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport {\n  TextField, CssBaseline, Card, Typography, Avatar,\n  CardContent, withStyles, InputAdornment, Button,\n} from '@material-ui/core';\nimport { Email, VisibilityOff, LockOutlined } from '@material-ui/icons';\n\nconst Design = (theme) => ({\n  icon: {\n    background: 'red',\n    marginLeft: theme.spacing(22),\n    marginTop: theme.spacing(2),\n  },\n  main: {\n    width: 400,\n    marginTop: theme.spacing(20),\n    marginLeft: theme.spacing(58),\n  },\n});\nclass Login extends React.Component {\n  schema = yup.object().shape({\n    email: yup.string()\n      .trim().email().required('Email Address is a required field'),\n    password: yup.string()\n      .required('Password is Required')\n      .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})/, 'Must contain 8 characters, at least one uppercase letter, one lowercase letter and one number'),\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      Email: '',\n      Password: '',\n      touched: {\n        email: false,\n        password: false,\n      },\n    };\n  }\n\n  handleChange=(key) => ({ target: { value } }) => {\n    this.setState({ [key]: value });\n  };\n\n  hasErrors = () => {\n    try {\n      this.schema.validateSync(this.state);\n    } catch (err) {\n      return true;\n    }\n    return false;\n  }\n\n  // eslint-disable-next-line consistent-return\n  getError = (field) => {\n    const { touched } = this.state;\n    if (touched[field] && this.hasErrors()) {\n      try {\n        this.schema.validateSyncAt(field, this.state);\n        return '';\n      } catch (err) {\n        return err.message;\n      }\n    }\n  }\n\n  isTouched = (field) => {\n    const { touched } = this.state;\n    this.setState({\n      touched: {\n        ...touched,\n        [field]: true,\n      },\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <div className={classes.main}>\n          <CssBaseline />\n          <Card open aria-labelledby=\"form-dialog-title\">\n            <Avtar className={classes.icon}>\n              <LockOutlined />\n            </Avtar>\n            <Typography variant=\"h3\" align=\"center\">Login</Typography>\n            <CardContent>\n              <form>\n                <div>\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"outlined-required\"\n                    label=\"Email Address\"\n                    defaultValue=\" \"\n                    variant=\"outlined\"\n                    helperText={this.getError('email')}\n                    error={!!this.getError('email')}\n                    oncChange={this.handleChange('email')}\n                    onBlur={() => this.isTouched('email')}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <Email />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </div>\n                <br />\n                <div>\n                  <TextField\n                    required\n                    type=\"password\"\n                    fullWidth\n                    id=\"outlined-required\"\n                    label=\"Password\"\n                    defaultValue=\" \"\n                    variant=\"outlined\"\n                    helperText={this.getError('password')}\n                    error={!!this.getError('password')}\n                    oncChange={this.handleChange('password')}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <VisibilityOff />\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </div>\n                &nbsp;\n                <div>\n                  <Button variant=\"contained\" color=\"primary\" disabled={this.hasErrors()} fullWidth>SIGN IN</Button>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </>\n    );\n  }\n}\n\nLogin.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired,\n};\nexport default withStyles(Design)(Login);\n"]},"metadata":{},"sourceType":"module"}